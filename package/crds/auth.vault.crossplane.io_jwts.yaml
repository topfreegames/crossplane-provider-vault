---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: jwts.auth.vault.crossplane.io
spec:
  group: auth.vault.crossplane.io
  names:
    categories:
    - crossplane
    - managed
    - vault
    kind: Jwt
    listKind: JwtList
    plural: jwts
    singular: jwt
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: A Jwt is an example API type.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: A JwtSpec defines the desired state of a Jwt.
            properties:
              deletionPolicy:
                default: Delete
                description: DeletionPolicy specifies what will happen to the underlying
                  external when this managed resource is deleted - either "Delete"
                  or "Orphan" the external resource.
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                description: JwtParameters are the configurable fields of a Jwt Auth
                  Backend Role.
                properties:
                  allowed_redirect_uris:
                    description: The list of allowed values for redirect_uri during
                      OIDC logins. Required for OIDC roles
                    items:
                      type: string
                    type: array
                  backend:
                    description: The unique name of the auth backend to configure.
                      Defaults to jwt.
                    type: string
                  bound_audiences:
                    description: List of aud claims to match against. Any match is
                      sufficient. Required for roles of type jwt, optional for roles
                      of type oidc)
                    items:
                      type: string
                    type: array
                  bound_claims:
                    additionalProperties:
                      type: string
                    description: f set, a map of claims to values to match against.
                      A claim's value must be a string, which may contain one value
                      or multiple comma-separated values, e.g. "red" or "red,green,blue"
                    type: object
                  bound_claims_type:
                    description: 'How to interpret values in the claims/values map
                      (bound_claims): can be either string (exact match) or glob (wildcard
                      match). Requires Vault 1.4.0 or above.'
                    type: string
                  bound_subject:
                    description: If set, requires that the sub claim matches this
                      value.
                    type: string
                  claim_mappings:
                    additionalProperties:
                      type: string
                    description: If set, a map of claims (keys) to be copied to specified
                      metadata fields (values).
                    type: object
                  clock_skew_leeway:
                    description: The amount of leeway to add to all claims to account
                      for clock skew, in seconds. Defaults to 60 seconds if set to
                      0 and can be disabled if set to -1. Only applicable with "jwt"
                      roles.
                    type: integer
                  expiration_leeway:
                    description: The amount of leeway to add to expiration (exp) claims
                      to account for clock skew, in seconds. Defaults to 60 seconds
                      if set to 0 and can be disabled if set to -1. Only applicable
                      with "jwt" roles.
                    type: integer
                  groups_claim:
                    description: The claim to use to uniquely identify the set of
                      groups to which the user belongs; this will be used as the names
                      for the Identity group aliases created due to a successful login.
                      The claim value must be a list of strings.
                    type: string
                  max_age:
                    description: Specifies the allowable elapsed time in seconds since
                      the last time the user was actively authenticated with the OIDC
                      provider.
                    type: boolean
                  namespace:
                    description: The namespace to provision the resource in. The value
                      should not contain leading or trailing forward slashes. The
                      namespace is always relative to the provider's configured namespace
                    type: string
                  not_before_leeway:
                    description: The amount of leeway to add to not before (nbf) claims
                      to account for clock skew, in seconds. Defaults to 60 seconds
                      if set to 0 and can be disabled if set to -1. Only applicable
                      with "jwt" roles.
                    type: integer
                  oidc_scopes:
                    additionalProperties:
                      type: string
                    description: If set, a list of OIDC scopes to be used with an
                      OIDC role. The standard scope "openid" is automatically included
                      and need not be specified.
                    type: object
                  role_type:
                    description: Type of role, either "oidc" (default) or "jwt"
                    type: string
                  user_claim:
                    description: The claim to use to uniquely identify the user; this
                      will be used as the name for the Identity entity alias created
                      due to a successful login.
                    type: string
                  user_claim_json_pointer:
                    description: Specifies if the user_claim value uses JSON pointer
                      syntax for referencing claims. By default, the user_claim value
                      will not use JSON pointer. Requires Vault 1.11+.
                    type: string
                  verbose_oidc_logging:
                    description: Log received OIDC tokens and claims when debug-level
                      logging is active. Not recommended in production since sensitive
                      information may be present in OIDC responses.
                    type: boolean
                required:
                - bound_audiences
                - namespace
                - user_claim
                type: object
              providerConfigRef:
                default:
                  name: default
                description: ProviderConfigReference specifies how the provider that
                  will be used to create, observe, update, and delete this managed
                  resource should be configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              providerRef:
                description: 'ProviderReference specifies the provider that will be
                  used to create, observe, update, and delete this managed resource.
                  Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`'
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: PublishConnectionDetailsTo specifies the connection secret
                  config which contains a name, metadata and a reference to secret
                  store config to which any connection details for this managed resource
                  should be written. Connection details frequently include the endpoint,
                  username, and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: SecretStoreConfigRef specifies which secret store
                      config should be used for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations are the annotations to be added to
                          connection secret. - For Kubernetes secrets, this will be
                          used as "metadata.annotations". - It is up to Secret Store
                          implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: Labels are the labels/tags to be added to connection
                          secret. - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store
                          types.
                        type: object
                      type:
                        description: Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: WriteConnectionSecretToReference specifies the namespace
                  and name of a Secret to which any connection details for this managed
                  resource should be written. Connection details frequently include
                  the endpoint, username, and password required to connect to the
                  managed resource. This field is planned to be replaced in a future
                  release in favor of PublishConnectionDetailsTo. Currently, both
                  could be set independently and connection details would be published
                  to both without affecting each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: A JwtStatus represents the observed state of a Jwt.
            properties:
              atProvider:
                description: JwtObservation are the observable fields of a Jwt.
                properties:
                  observableField:
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time this condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A Message containing details about this condition's
                        last transition from one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: Type of this condition. At most one of each condition
                        type may apply to a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
